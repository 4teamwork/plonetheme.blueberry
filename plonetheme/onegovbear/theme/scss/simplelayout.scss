$toolbar-bg-color: $gray-dark;
$action-bg-color: $gray-dark;
$action-bg-color-hover: $gray-light;

$column-bg-color: $gray-light;

$block-placeholder-bg-color: $gray;
$block-placeholder-border-size: 1px;
$block-placeholder-border-style: dotted;
$block-placeholder-border-color: $gray-dark;

$layout-placeholder-bg-color: $block-placeholder-bg-color;
$layout-placeholder-border-size: $block-placeholder-border-size;
$layout-placeholder-border-style: $block-placeholder-border-style;
$layout-placeholder-border-color: $block-placeholder-border-color;

$simplelayout-gutter-width: $gutter-width !default;
$simplelayout-columns: $columns !default;

ul[class^="sl-toolbar"] {
  background-color: $toolbar-bg-color;
  border-radius: $border-radius;
}

.sl-toolbox {
  a {
    font-size: 14px;
    font-weight: normal;
  }
}

.sl-block {
  box-shadow: none;
  margin-bottom: 2px;

  .sl-block-content {
    img {
      max-width: 100%;
    }
  }

  &:last-child {
    margin-bottom: 0;
  }
}

.sl-column {
  background-color: $content-bg-color;

  .block-placeholder {
    margin-bottom: 1px;
  }
}

.sl-layout {
  .block-placeholder {
    background-color: $block-placeholder-bg-color;
    border: $block-placeholder-border-size $block-placeholder-border-style $block-placeholder-border-color;
  }
}

.sl-simplelayout {
  .layout-placeholder {
    background-color: $layout-placeholder-bg-color;
    border: $layout-placeholder-border-size $layout-placeholder-border-style $layout-placeholder-border-color;
  }
}

// If user is permitted to edit the simplelayout page
.documentEditable {
  .sl-column {
    background-color: $column-bg-color;
  }
}

.sl-column {

  $gutter-width: 100% / $gridsystem-width * $simplelayout-gutter-width * 2;

  @for $i from 1 through $simplelayout-columns {
    &.sl-col-#{$i} {
      margin-right: 0;
      width: 100%;

      &:last-of-type {
        margin-right: 0 !important;
      }
    }
  }

  @media (min-width: $mobile-small) {
    @for $i from 1 through $simplelayout-columns {
      &.sl-col-#{$i} {
        margin-right: $gutter-width;
        width: 100% / ($i / 2) - $gutter-width + $gutter-width / ($i / 2);

        &:nth-of-type(#{$i / 2}n+#{$i / 2}) {
          margin-right: 0;
        }
      }
    }
  }

  @media (min-width: $desktop-HD-width) {
    @for $i from 1 through $simplelayout-columns {
      &.sl-col-#{$i} {
        margin-right: $gutter-width;
        width: 100% / $i - $gutter-width + $gutter-width / $i;

        &:nth-of-type(#{$i / 2}n+#{$i / 2}) {
          margin-right: $gutter-width;
        }

        &:last-of-type {
          margin-right: 0 !important;
        }

      }
    }
  }

}
